---
import * as interfaces from "../../lib/interfaces.ts";
import { getPosts, getAllPosts, getRankedPosts, getPostBySlug, getPostsByTag, getAllTags, getAllBlocksByBlockId } from "../../lib/notion/client.ts";
import { getPostLink } from "../../lib/blog-helpers.ts";
import Layout from "../../layouts/Layout.astro";
import PostDate from "../../components/PostDate.astro";
import PostTags from "../../components/PostTags.astro";
import PostTitle from "../../components/PostTitle.astro";
import PostBody from "../../components/PostBody.astro";
import AsideProfile from "../../components/AsideProfile.astro";
import BlogPostsLink from "../../components/BlogPostsLink.astro";
import BlogTagsLink from "../../components/BlogTagsLink.astro";
import styles from "../../styles/blog.module.css";

export async function getStaticPaths() {
  const posts = await getAllPosts();
  return posts.map((post: interfaces.Post) => ({ params: { slug: post.Slug } }));
}

const { slug } = Astro.params;

const post = await getPostBySlug(slug);
if (!post) {
  throw new Error("Post not found. slug: ${slug}");
}

const [blocks, rankedPosts, recentPosts, tags, postsHavingSameTag] = await Promise.all([
  getAllBlocksByBlockId(post.PageId),
  getRankedPosts(),
  getPosts(5),
  getAllTags(),
  getPostsByTag(post.Tags[0]?.name, 6),
]);
---

<Layout title={post.Title} description={post.Excerpt} path={getPostLink(post.Slug)}>
  <div class="flex flex-wrap justify-between">
    <main class="w-full lg:w-3/4">
      <div>
        <PostDate post={post} />
        <PostTags post={post} />
        <PostTitle post={post} enableLink={false} />
        <PostBody blocks={blocks} />

        <footer></footer>
      </div>
    </main>

    <aside class="w-full lg:w-1/6">
      <AsideProfile />
      <BlogPostsLink heading={"★ " + post.Tags[0]?.name} posts={postsHavingSameTag.filter((p: interfaces.Post) => p.Slug !== post.Slug)} />
      <BlogPostsLink heading="★ おすすめ記事" posts={rankedPosts} />
      <BlogPostsLink heading="★ 最近の投稿" posts={recentPosts} />
      <BlogTagsLink heading="★ タグ一覧" tags={tags} />
    </aside>
  </div>
</Layout>
